const mongoose = require("mongoose");
const AutoIncrement = require("mongoose-sequence")(mongoose);

const Schema = mongoose.Schema;

const cbibSchema = new Schema(
  {
    id: { type: Number },
    RID: { type: String, required: true, unique: true },
    language_KH: { type: String },
    language_EN: { type: String },
    publicationCountry_KH: { type: String, required: true },
    publicationCountry_EN: { type: String, required: true },
    title_KH: { type: String, required: true },
    title_EN: { type: String, required: true },
    timeForm: { type: String, required: true },
    timeTo: { type: String, required: true },
    timeNote: { type: String },
    geographicAreaCode_KH: { type: String },
    geographicAreaCode_EN: { type: String },
    catelogAgency: { type: String },
    libraryHolding: { type: String },
    edition_KH: { type: String },
    edition_EN: { type: String },
    publicationArea_KH: { type: String, required: true },
    publicationArea_EN: { type: String, required: true },
    physicalDescription_KH: { type: String },
    physicalDescription_EN: { type: String },
    series_KH: { type: String },
    series_EN: { type: String },

    IdNumbers_KH: { type: String, required: true },
    IdNumbers_EN: { type: String, required: true },
    noteLanguage_KH: { type: String },
    noteLanguage_EN: { type: String },
    histrory_KH: { type: String },
    history_EN: { type: String },
    notePhysicalDescription: { type: String },
    topSecret_KH: { type: String },
    topSecret_EN: { type: String },
    intellectualResponsibility_KH: { type: String },
    intellectualResponsibility_EN: { type: String },
    copyInHand_KH: { type: String, required: true },
    copyInHand_EN: { type: String, required: true },
    sourceHand_KH: { type: String, required: true },
    sourceHand_EN: { type: String, required: true },
    action_KH: { type: String },
    action_EN: { type: String },
    bibliography_KH: { type: String },
    bibliography_EN: { type: String },
    contents_KH: { type: String },
    contents_EN: { type: String },
    translationOf_KH: { type: String },
    translationOf_EN: { type: String },
    set_KH: { type: String },
    set_EN: { type: String },
    pieceItem_KH: { type: String },
    pieceItem_EN: { type: String },

    pieceAnalytic_KH: { type: String },
    pieceAnalytic_EN: { type: String },
    otherNotes_KH: { type: String },
    otherNotes_EN: { type: String },
    otherTitles_KH: { type: String },
    otherTitles_EN: { type: String },
    personalNameSubject_KH: { type: String },
    personalNameSubject_EN: { type: String },
    CORPNameSubject_KH: { type: String },
    CORPNameSubject_EN: { type: String },
    subjectTopical_KH: { type: String },
    subjectTopical_EN: { type: String },
    subjectGEO_KH: { type: String },
    subjectGEO_EN: { type: String },
    subjectOther_KH: { type: String },
    subjectOther_EN: { type: String },
    mainEntryPerson_KH: { type: String },
    mainEntryPerson_EN: { type: String },
    ALTEntryPerson_KH: { type: String },
    ALTEntryPerson_EN: { type: String },
    mainEntryCorporate_KH: { type: String },
    mainEntryCorporate_EN: { type: String },
    ALTEntryCorporate_KH: { type: String },
    ALTEntryCorporate_EN: { type: String },

    currentPlace_CodesNames_KH: { type: String },
    currentPlace_CodesNames_EN: { type: String },
    KRZone_CodesNames_KH: { type: String },
    KRZone_CodesNames_EN: { type: String },
    datePlaceOfFinding_KH: { type: String, required: true },
    datePlaceOfFinding_EN: { type: String, required: true },
    spareCGP_KH: { type: String },
    spareCGP_EN: { type: String },
    victims_KH: { type: String, required: true },
    victims_EN: { type: String, required: true },
    perpetrator_KH: { type: String },
    perpetrator_EN: { type: String },
    note_KH: { type: String },
    note_EN: { type: String },
    generalNote_KH: { type: String },
    generalNote_EN: { type: String },
    addition_KH: { type: String },
    addition_EN: { type: String },
    DKGeaographical_NameCodes_KH: { type: String },
    DKGeaographical_NameCodes_EN: { type: String },
    geo_NameCodes_KH: { type: String },
    geo_NameCodes_EN: { type: String },
    publicationNotes_KH: { type: String },
    publicationNotes_EN: { type: String },

    engDoc_BoxNo_KH: { type: String },
    engDoc_BoxNo_EN: { type: String },
    engDoc_FileNAME_KH: { type: String, required: true },
    engDoc_FileNAME_EN: { type: String, required: true },
    freDoc_NoBox_KH: { type: String },
    freDoc_NoBox_EN: { type: String },
    freDoc_FileName_KH: { type: String, required: true },
    freDoc_FileName_EN: { type: String, required: true },
    khmerDoc_NoBox_KH: { type: String },
    khmerDoc_NoBox_EN: { type: String },
    khmerDoc_FileName_KH: { type: String, required: true },
    khmerDoc_FileName_EN: { type: String, required: true },

    remark: { type: String },
    copyright: { type: String },
    publish: { type: Number, required: true },
  },
  {
    timestamps: true,
  }
);

cbibSchema.plugin(AutoIncrement, { inc_field: "id", id: "cbibId" });
module.exports = mongoose.model("cbib", cbibSchema);
